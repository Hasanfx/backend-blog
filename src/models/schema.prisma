generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String 
  posts     Post[]   @relation("userPosts")
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          Int             @id @default(autoincrement())
  title       String
  content     String
  author      User?            @relation("userPosts", fields: [authorId], references: [id] ,onDelete:SetNull)
  authorId    Int?
  comments    Comment[]
  categories  PostCategories[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int             @id @default(autoincrement())
  name      String          @unique
  posts     PostCategories[] 
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

// Join table for many-to-many relationship between Post and Category
model PostCategories {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([postId, categoryId]) // Composite primary key
}
